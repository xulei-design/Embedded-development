C51 COMPILER V9.54   DS18B20                                                               05/07/2023 23:09:25 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN ..\output\DS18B20.obj
COMPILER INVOKED BY: E:\keil\keil5\keil5 install\C51\BIN\C51.EXE ..\source\DS18B20.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJE
                    -CTEXTEND PRINT(..\listing\DS18B20.lst) OBJECT(..\output\DS18B20.obj)

line level    source

   1          #include "DS18B20.h"
   2          
   3          unsigned char code rom1[] = {0x28,0xFF,0x50,0xB9, 0xC0,0x17,0x05,0x31}; //第一个DS18B20rom码
   4          unsigned char code rom2[] = {0x28,0xFE,0x50,0xB9, 0xC0,0x17,0x05,0x30};
   5          unsigned char code rom3[] = {0x28,0xFD,0x50,0xB9, 0xC0,0x17,0x05,0x29};
   6          unsigned char code rom4[] = {0x28,0xFC,0x50,0xB9, 0xC0,0x17,0x05,0x28};
   7          
   8          bit Start18B20()
   9          {
  10   1          bit ack;
  11   1          //1.初始化，判断是否有单总线器件
  12   1          ack = OneWireRst();
  13   1          if(ack == 0)
  14   1          {
  15   2              //2.ROM指令
  16   2              WriteOneWire(SKIP_ROM);
  17   2              //3.功能指令 启动温度转换
  18   2              WriteOneWire(CONVERT_T);
  19   2          }
  20   1          return ~ack;
  21   1      }
  22          
  23          bit Read18B20(int * temp) //数据读取成功返回ack=1
  24          {
  25   1          bit ack;
  26   1          unsigned char MSB,LSB;
  27   1          //1.初始化，判断是否有单总线器件
  28   1          ack = OneWireRst();
  29   1          if(ack == 0)
  30   1          {
  31   2              //2.ROM指令
  32   2              WriteOneWire(SKIP_ROM); //建立单总线器件的通信
  33   2              //3.功能指令 启动温度转换
  34   2              WriteOneWire(READ_REGISTER);
  35   2              //4.读转换结果 根据功能指令来确定
  36   2              LSB = ReadOneWire();
  37   2              MSB = ReadOneWire();
  38   2              *temp = ((int)MSB<<8) + LSB;
  39   2          }
  40   1          return ~ack;
  41   1      }
  42          
  43          void ReadRomCode(unsigned char *romcode)
  44          {
  45   1          unsigned char i;
  46   1          bit ack;
  47   1          ack = OneWireRst();
  48   1          if(ack == 0)
  49   1          {
  50   2              WriteOneWire(READ_ROM); //读取rom指令
  51   2              for(i=0;i<8;i++)  //读取8个字节的64位ROM码
  52   2              {
  53   3                  //romcode[i] = ReadOneWire();
  54   3                  *(romcode+i) = ReadOneWire();
C51 COMPILER V9.54   DS18B20                                                               05/07/2023 23:09:25 PAGE 2   

  55   3              }
  56   2              
  57   2          }
  58   1      }
  59          
  60          void MatchRomCode(unsigned char n) //根据参数，匹配不同的DS18B20 ROM码
  61          {
  62   1          unsigned char i;
  63   1          WriteOneWire(MATH_ROM); //建立单总线器件通信,发送ROM码
  64   1          switch(n)
  65   1          {
  66   2              case 1: 
  67   2                  for(i=0;i<8;i++)
  68   2                      WriteOneWire(rom1[i]);
  69   2              break;
  70   2              case 2: 
  71   2                  for(i=0;i<8;i++)
  72   2                      WriteOneWire(rom2[i]);
  73   2              break;
  74   2              case 3:
  75   2                  for(i=0;i<8;i++)
  76   2                      WriteOneWire(rom3[i]);
  77   2              break;
  78   2              case 4:  
  79   2                  for(i=0;i<8;i++)
  80   2                      WriteOneWire(rom4[i]);
  81   2              break;
  82   2              default: break;
  83   2          }
  84   1      }
  85          
  86          void Get18B20Temp(int *temp,unsigned char n)
  87          {
  88   1          bit ack;
  89   1          unsigned char MSB,LSB;
  90   1          //1.初始化，判断是否有单总线器件
  91   1          ack = OneWireRst();
  92   1          while(ack);  
  93   1          //2.ROM指令
  94   1          MatchRomCode(n); //建立单总线器件的通信,匹配ROM指令,
  95   1          //3.功能指令 启动温度转换
  96   1          WriteOneWire(CONVERT_T);
  97   1          //上面是匹配ROM的温度转换
  98   1          
  99   1          
 100   1          //1.初始化
 101   1          ack = OneWireRst();
 102   1          while(ack);
 103   1          //2.ROM指令 匹配成功执行下一步
 104   1          MatchRomCode(n);
 105   1          //3.功能指令 读取转换结果
 106   1          WriteOneWire(READ_REGISTER);
 107   1          //4.读取转换结果 根据功能指令来确定
 108   1          LSB = ReadOneWire();
 109   1          MSB = ReadOneWire();
 110   1          *temp = ((int)MSB<<8) + LSB;
 111   1          //读取启动后的温度转换数据
 112   1          
 113   1      }
 114              


C51 COMPILER V9.54   DS18B20                                                               05/07/2023 23:09:25 PAGE 3   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    318    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       4
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
